import React, { useState } from 'react';

const Calendar2025: React.FC = () => {
    const [currentMonth, setCurrentMonth] = useState(0); // Starting from January
    const [selectedDate, setSelectedDate] = useState<number | null>(null);

    const months = [
        'January', 'February', 'March', 'April', 'May', 'June',
        'July', 'August', 'September', 'October', 'November', 'December'
    ];
    const weekDays = ['M', 'T', 'W', 'T', 'F', 'S', 'S'];

    const getDaysInMonth = (month: number) => {
        const daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
        const firstDayOffset = [2, 5, 5, 1, 3, 6, 1, 4, 7, 2, 5, 7]; // Offsets for each month's starting day in 2025
        const emptyDays = Array(firstDayOffset[month]).fill('');
        const days = Array.from({ length: daysInMonth[month] }, (_, i) => i + 1);
        return [...emptyDays, ...days];
    };

    const handleDateClick = (day: number) => {
        setSelectedDate(day);
    };

    const renderCalendar = () => {
        const days = getDaysInMonth(currentMonth);
        return (
            <div className="relative">
                <div className="absolute top-[310px] left-[61px] w-[1315px] h-[48px] text-center font-bold text-2xl">
                    BOOK DATE
                </div>
                <div className="absolute top-[369px] left-[199px] w-[1042px] h-[427px] border-2 border-black p-5">
                    <div className="flex justify-center items-center gap-5">
                        <button onClick={() => setCurrentMonth((prev) => Math.max(prev - 1, 0))}>&lt;</button>
                        <h2>{months[currentMonth]}</h2>
                        <button onClick={() => setCurrentMonth((prev) => Math.min(prev + 1, 11))}>&gt;</button>
                    </div>
                    <div className="flex justify-around font-bold">
                        {weekDays.map((day, index) => (
                            <div key={index} className="w-10 text-center">{day}</div>
                        ))}
                    </div>
                    <div className="grid grid-cols-7">
                        {days.map((day, index) => (
                            <button
                                key={index}
                                className={`p-2 text-center border rounded-md ${day === selectedDate ? 'bg-blue-500 text-white' : 'bg-gray-200'} ${day === '' ? 'invisible' : ''}`}
                                onClick={() => day && handleDateClick(day)}
                            >
                                {day}
                            </button>
                        ))}
                    </div>
                </div>
                <div className="absolute top-[810px] left-1/2 -translate-x-1/2 w-[266px] h-[50px] bg-[#1DC5C4] text-white rounded-2xl flex justify-center items-center font-bold cursor-pointer">
                    Next
                </div>
            </div>
        );
    };

    return <div>{renderCalendar()}</div>;
};

export default Calendar2025;
